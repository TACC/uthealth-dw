drop table if exists dev.wc_pfp_test1;

select 
'' as NationalProviderIdentifier,
'' as NetworkProviderIndicator,
'' as AttendingPhysician,
'' as PatientName,
'' as MedicalRecordNumber,
pcn as PatientId,
case when 2019 - substring(dob,5,4)::int = 0 
     then ( make_date( substring(admitdate,5,4)::int, substring(admitdate,1,2)::int, substring(admitdate,3,2)::int ) ) - dob_date
     else null end as AgeInDays,
2019 - substring(dob,5,4)::int  as AgeInYears,
Sex,
dob as BirthDate,
'' as BirthWeight,
'' as MilitaryStatus,
AdmitDate,
DischargeDate,
'' as AccountNumber,
'' as SourceOfAdmission,
'' as AdmitPriority,
'' as Filler_FormerlyPointOfOrigin,
DischargeStatus,
'' as DaysOnMechanicalVentilation,
'' as DMVDaysAfterAdmission,
'' as ConditionCode,
TypeOfBill,
'' as EctUnits,
'' as TypeOfService,
'' as LevelOfNursery,
'' as TotalCharges,
'' as NonCoveredCharges,
'' as OccurrenceSpanCode,
'' as OccurrenceSpanCodeFromDate,
'' as OccurrenceSpanCodeThroughDate,
'' as OccurrenceCode,
'' as OccurrenceCodeDate,
'' as ValueCode,
'' as ValueCodeAmount,
'' as PatientType,
'' as UserKey1,
'' as UserKey2,
'' as PayerFlag,
0 as ICDVersionQualifier, 
adm_dx_cd as AdmitDiagnosis,
prim_dx_cd as PrincipalDiagnosis,
'' as PrincipalDiagnosisPOA,
'' as ReasonForVisitDiagnosis,
'' as SecondaryDiagnosisPOA,
dx_array as SecondaryDiagnosis,
proc_array as Procedure,
proc_dt_array as ProcedureDate,
'' as ProcedurePhysician,
cpt_hcpcs_array as ProcedureHcpcs,
'' as ItemModifier1,
'' as ItemModifier2,
'' as ItemModifier3,
'' as ItemModifier4,
'' as ItemModifier5,
revs as ItemRevenueCode,
'' as ItemUnitsOfService,
'' as ItemCharges,
'' as ItemNonCoveredCharges,
'' as ItemServiceDate,
'' as ItemActionFlag,
'' as ItemProfessionalServiceFlag,
'' as DisableHac,
'' as FacilityId,
'' as ProviderZipCode,
'' as Deductible,
'' as ItemNdcCode,
'' as AwaitingAlternateLevelOfCareDays,
'' as OtherPhysician1,
'' as OtherPhysician2,
'' as UserDefinedNumberOfVisits,
'' as BrainInjuryReserveFlag,
'' as CancerReserveFlag,
'' as NatureOfAdmit,
'' as PsychiatricStatusIndicator,
'' as AttendingPhysicianId,
'' as AcceptAssignment,
'' as IllnessDate,
'' as ReferringProviderId,
'' as PriorAuthorization,
ItemFromDate,
ItemToDate,
'' as ItemPlaceOfService,
'' as ItemDiagnosisPointer,
'' as ItemRenderingProviderIdQualifier,
'' as ItemRenderingProviderId,
'' as RenderingProviderTaxId,
'' as ItemRenderingProviderType,
'' as ParticipatingProviderFlag,
'' as OperatingPhysician,
'' as ProviderNumber,
'' as OnsetOfDialysisDate,
'' as ExternalCauseOfInjuryDiagnosis,
'' as ExternalCauseOfInjuryDiagnosisPOA,
'' as DrugCharges,
'' as ObservationCharges,
'' as ObservationUnits,
'' as SupplyCharges,
'' as AssumedPostoperativeCareDate,
'' as RelinquishedPostoperativeCareDate,
'' as PostoperativeCareDateNarrative,
h.icn as ClaimId,
'' as ItemAtcCode,
pos as PlaceOfService,
ProviderType,
rev_cd as ClaimType,
'' as DeathDate,
'' as FinancialAmount,
'' as ItemFinancialAmount,
providertype as ItemProviderType,
enrl_start as PatientEligibilityStartDate,
enrl_end as PatientEligibilityEndDate,
'' as PatientZipCode,
'' as ItemDinCode,
'' as FinancialPayer,
'' as MemberBenefitPlan,
'' as ItemCostShare,
'' as PreviousDischargeDate,
'' as ClinicalTrialRegistryNumber,
'' as FlatRateLabTravelMethod,
'' as EstablishedIntegratedHealthSystemFlag,
'' as SecondaryDiagnosisComorbidityStartDate,
'' as MedicareAdvantageContractRate,
'' as CitizenshipStatus,
'' as PartialEligibilityIndicator,
'' as ContractType,
'' as BedType,
admit_id as AdmitId,
'' as Filler_FormerlyLos,
case
      when substr(TypeofBill,2,2) in ('11','12') or pos in ('23') then 1
   when pos in ('51','52','53','55','56','57','58') then 2
   when pos in ('61','62') then 3
   when substr(TypeofBill,2,1)='2' or pos in ('31') then 5
   when pos in ('6','7','8','06','07','08') then 6
   when substr(TypeofBill,2,1)='3' or pos in ('12') then 7
   when substr(TypeofBill,2,2) in ('15','16') or pos in ('32') then 8
   when pos in ('34') then 9
   else null 
    end as HospitalType,
'' as ProviderId,
'' as PatientResponsibility,
'' as ThirdPartyLiability,
'' as SiteNeutralPaymentExclusion,
'' as FunctionalStatusGrouperDisable,
'' as FunctionalStatusGrouperAssessmentDate,
'' as FunctionalStatusGrouperAssessmentTool,
'' as FunctionalStatusGrouperAssessmentItemId,
'' as FunctionalStatusGrouperAssessmentScore,
'' as PayerEligibleDays,
'' as NoPriorAuthorizationForPerDiemPayment,
'' as AdmitCognitiveComprehension,
'' as AdmitCognitiveExpression,
'' as AdmitCognitiveMemory,
'' as AdmitCognitiveProblemSolving,
'' as AdmitCognitiveSocialInteraction,
'' as AdmitImpairmentGroupCode,
'' as AdmitMotorBathing,
'' as AdmitMotorBladder,
'' as AdmitMotorBowel,
'' as AdmitMotorDressingLower,
'' as AdmitMotorDressingUpper,
'' as AdmitMotorEating,
'' as AdmitMotorGrooming,
'' as AdmitMotorLocomotionStairs,
'' as AdmitMotorLocomotionWalk,
'' as AdmitMotorToileting,
'' as AdmitMotorTransferBed,
'' as AdmitMotorTransferToilet,
'' as ComorbidityDiagnosis,
'' as DischargeCognitiveComprehension,
'' as DischargeCognitiveExpression,
'' as DischargeCognitiveMemory,
'' as DischargeCognitiveProblemSolving,
'' as DischargeCognitiveSocialInteraction,
'' as DischargeImpairmentGroupCode,
'' as DischargeMotorBathing,
'' as DischargeMotorBladder,
'' as DischargeMotorBowel,
'' as DischargeMotorDressingLower,
'' as DischargeMotorDressingUpper,
'' as DischargeMotorEating,
'' as DischargeMotorGrooming,
'' as DischargeMotorLocomotionStairs,
'' as DischargeMotorLocomotionWalk,
'' as DischargeMotorToileting,
'' as DischargeMotorTransferBed,
'' as DischargeMotorTransferToilet,
'' as BilledCmgValue,
'' as UserDefinedAdjustmentFactor,
'' as SiteOfService,
'' as ItemSiteOfService,
'' as AdmitFromResidentialNursingFacililty,
'' as TaxonomyCode
into dev.wc_pfp_1819_agegroup7
from dev.wc_pfp_clm1819_hdr h 
   join dev.wc_pfp_clm1819_dtl d 
     on h.icn = d.icn 
 where 2019 - substring(dob,5,4)::int >= 75 --between 65 and 74 -- between 0 and 19 ---
order by patientid,  AdmitDate
;

--				when age between  0 and 19 then '1'
--				when age between 20 and 34 then '2' 
--       		when age between 35 and 44 then '3'
--       		when age between 45 and 54 then '4'
--       		when age between 55 and 64 then '5'
--       		when age between 65 and 74 then '6'
--       		when age >= 75 then '7'


select count(*) , ageinyears  
from dev.wc_pfp_test1
group by ageinyears ;