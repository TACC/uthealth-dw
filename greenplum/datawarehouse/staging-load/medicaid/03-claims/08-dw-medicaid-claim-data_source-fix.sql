/* ******************************************************************************************************
 * Changes data source for claims generated by members enrolled in CHIP Perinatal and HTW
 * ******************************************************************************************************
 *  Author || Date      || Notes
 * ******************************************************************************************************
 * xrzhang || 04/04/2023 || Created
 * ******************************************************************************************************
 *
 */
/**********************
 * NOTE: IF YOU ARE RUNNING THIS CODE AFTER A MEDICAID DW REFRESH, 
 * TABLE NAMES MAY NEED TO BE CHANGED
 * 
 * CURRENT VERSION OF CODE MAKES CHANGES TO LIVE DW TABLES DIRECTLY!
 **********************/








/*********************
 * Create master list of member_ids and year-months based on monthly enrollment table
 * ******************/
drop table if exists dw_staging.mcpp_mhtw_client_nbr_yrmonth;

create table dw_staging.mcpp_mhtw_client_nbr_yrmonth as
select data_source, member_id_src, month_year_id,
	to_date((month_year_id*100+01)::text, 'yyyymmdd') as month_start,
	(to_date((month_year_id*100+01)::text, 'yyyymmdd') + interval '1 month - 1 day')::date as month_end
from dw_staging.mcd_member_enrollment_monthly
where data_source in ('mcpp', 'mhtw')
distributed by (member_id_src);

analyze dw_staging.mcpp_mhtw_client_nbr_yrmonth;

/*********************
 * Create master list of claims from claim_header originating
 * from members enrolled in CHIP PERI and HTW
 *********************/
drop table if exists dw_staging.mcpp_mhtw_claims;

create table dw_staging.mcpp_mhtw_claims as
select a.claim_id_src, a.from_date_of_service, b.*
from data_warehouse.claim_header_1_prt_mdcd a
inner join dw_staging.mcpp_mhtw_client_nbr_yrmonth b
on a.member_id_src = b.member_id_src
	and a.from_date_of_service between b.month_start and b.month_end
distributed by (claim_id_src);

analyze dw_staging.mcpp_mhtw_claims;

/*********************
 * Relabel claims for each table
 * 
 * Update claim_header last
 *********************/
--claim_detail
update data_warehouse.claim_detail a
set data_source = b.data_source
from dw_staging.mcpp_mhtw_claims b
where a.data_source = 'mdcd' and
	a.claim_id_src = b.claim_id_src;

vacuum analyze data_warehouse.claim_detail;

--claim_diag
update data_warehouse.claim_diag a
set data_source = b.data_source
from dw_staging.mcpp_mhtw_claims b
where a.data_source = 'mdcd' and
	a.claim_id_src = b.claim_id_src;

vacuum analyze data_warehouse.claim_diag;

--claim_icd_proc
update data_warehouse.claim_icd_proc a
set data_source = b.data_source
from dw_staging.mcpp_mhtw_claims b
where a.data_source = 'mdcd' and
	a.claim_id_src = b.claim_id_src;

vacuum analyze data_warehouse.claim_icd_proc;

--claim_header
update data_warehouse.claim_header a
set data_source = b.data_source
from dw_staging.mcpp_mhtw_claims b
where a.data_source = 'mdcd' and
	a.claim_id_src = b.claim_id_src;

vacuum analyze data_warehouse.claim_header;

/*********************
 * Update the data_source for pharmacy table
 *********************/
update data_warehouse.pharmacy_claims a
set data_source = b.data_source
from dw_staging.mcpp_mhtw_client_nbr_yrmonth b
where a.data_source = 'mdcd' and
	a.member_id_src = b.member_id_src and
	a.fill_date between b.month_start and b.month_end;

vacuum analyze data_warehouse.pharmacy_claims;


/********************************
 * change update_log
 *******************************/

--backup update_log
drop table if exists backup.update_log;

create table backup.update_log as
select * from data_warehouse.update_log;


--update main tables - not partitioned tables
update data_warehouse.update_log
set data_last_updated = '04-04-2023'::date,
	details = 'CHIP Perinatal and HTW split out to their own partitions'
where schema_name = 'data_warehouse' and
	(table_name like 'claim%' or 
	table_name = 'pharmacy_claims') and
	table_name not like '%1%';

--update partitioned tables
update data_warehouse.update_log
set data_last_updated = '04-04-2023'::date,
	details = 'CHIP Perinatal and HTW split out to their own partitions'
where schema_name = 'data_warehouse' and
	(table_name like 'claim%' or 
	table_name like 'pharmacy%') and
	(table_name like '%mdcd' or
	table_name like '%mcpp' or 
	table_name like '%mhtw');



















