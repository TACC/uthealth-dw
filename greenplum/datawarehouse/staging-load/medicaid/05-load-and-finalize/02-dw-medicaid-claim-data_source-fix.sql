/* ******************************************************************************************************
 * Changes data source for claims generated by members enrolled in CHIP Perinatal and HTW
 * ******************************************************************************************************
 *  Author || Date      || Notes
 * ******************************************************************************************************
 * xrzhang || 04/04/2023 || Created
 * ------------------------------------------------------------------------------------------------------
 * xrzhang || 09/05/2023 || Moved script order after load - easiest to make changes on live tables
 * 							as they already have the partitions and such
 * ------------------------------------------------------------------------------------------------------
 * xrzhang || 09/13/2023 || Modified script so it backfills in missing uth_member_ids as well
 */
/**********************
 * NOTE: This by necessity makes changes to live tables.
 * The reason for this is because the Medicaid data is all mixed in, so it's easier
 * to deal with it as one big table... but one big table can't be loaded into 3 different partitions,
 * (well it CAN be inserted but it CAN'T be swapped) SO just leave it as one table and then alter the
 * data source afterwards
 **********************/

/*********************
 * Create master list of member_ids and year-months based on monthly enrollment table
 * ******************/
drop table if exists dw_staging.mcpp_mhtw_client_nbr_yrmonth;

create table dw_staging.mcpp_mhtw_client_nbr_yrmonth as
select data_source, uth_member_id, member_id_src, month_year_id,
	to_date((month_year_id*100+01)::text, 'yyyymmdd') as month_start,
	(to_date((month_year_id*100+01)::text, 'yyyymmdd') + interval '1 month - 1 day')::date as month_end
--from dw_staging.mcd_member_enrollment_monthly
from data_warehouse.member_enrollment_monthly
where data_source in ('mcpp', 'mhtw')
distributed by (member_id_src);

analyze dw_staging.mcpp_mhtw_client_nbr_yrmonth;

--select * from dw_staging.mcpp_mhtw_client_nbr_yrmonth;

/*********************
 * Create master list of claims from claim_header originating
 * from members enrolled in CHIP PERI and HTW
 *********************/
drop table if exists dw_staging.mcpp_mhtw_claims;

create table dw_staging.mcpp_mhtw_claims as
select data_source, claim_id_src, uth_member_id, member_id_src
from (
	select a.claim_id_src, a.from_date_of_service, b.*
	from data_warehouse.claim_header_1_prt_mdcd a
	inner join dw_staging.mcpp_mhtw_client_nbr_yrmonth b
	on a.member_id_src = b.member_id_src
		and a.from_date_of_service between b.month_start and b.month_end) t
group by 1, 2, 3, 4
distributed by (claim_id_src);

analyze dw_staging.mcpp_mhtw_claims;

--select * from dw_staging.mcpp_mhtw_claims;

/*********************
 * Relabel claims for each table
 * 
 * Update claim_header last
 * 
 * Note: null uth_member_ids are for people with a claim who are NOT in enrollment tables
 *********************/
--claim_detail
update data_warehouse.claim_detail a
set data_source = b.data_source,
	uth_member_id = b.uth_member_id
from dw_staging.mcpp_mhtw_claims b
where a.data_source = 'mdcd' and
	a.claim_id_src = b.claim_id_src;

vacuum analyze data_warehouse.claim_detail;

--claim_diag
update data_warehouse.claim_diag a
set data_source = b.data_source,
	uth_member_id = b.uth_member_id
from dw_staging.mcpp_mhtw_claims b
where a.data_source = 'mdcd' and
	a.claim_id_src = b.claim_id_src;

vacuum analyze data_warehouse.claim_diag;

--claim_icd_proc
update data_warehouse.claim_icd_proc a
set data_source = b.data_source,
	uth_member_id = b.uth_member_id
from dw_staging.mcpp_mhtw_claims b
where a.data_source = 'mdcd' and
	a.claim_id_src = b.claim_id_src;

vacuum analyze data_warehouse.claim_icd_proc;

--claim_header
update data_warehouse.claim_header a
set data_source = b.data_source,
	uth_member_id = b.uth_member_id
from dw_staging.mcpp_mhtw_claims b
where a.data_source = 'mdcd' and
	a.claim_id_src = b.claim_id_src;

vacuum analyze data_warehouse.claim_header;

/*********************
 * Update the data_source for pharmacy table
 *********************/
update data_warehouse.pharmacy_claims a
set data_source = b.data_source,
	uth_member_id = b.uth_member_id
from dw_staging.mcpp_mhtw_client_nbr_yrmonth b
where a.data_source = 'mdcd' and
	a.member_id_src = b.member_id_src and
	a.fill_date between b.month_start and b.month_end;

vacuum analyze data_warehouse.pharmacy_claims;

/***********************************************
 * Using the newly determined uth_claim_id - data_source pairs,
 * go back and fix dim_uth_claim_id
 **********************************************/
drop table if exists dw_staging.dim_claim_id_data_source_fix;

create table dw_staging.dim_claim_id_data_source_fix as
select data_source, uth_claim_id
from data_warehouse.claim_header
where data_source in ('mhtw', 'mcpp');

update data_warehouse.dim_uth_claim_id a
set data_source = b.data_source
from dw_staging.dim_claim_id_data_source_fix b
where a.uth_claim_id = b.uth_claim_id
and a.data_source = 'mdcd';

vacuum analyze data_warehouse.dim_uth_claim_id;

/**** check if it worked *****************************
select data_source, count(*) from data_warehouse.claim_header
where data_source in ('mdcd', 'mhtw', 'mcpp')
group by 1 order by 1;

select data_source, count(*) from data_warehouse.dim_uth_claim_id
where data_source in ('mdcd', 'mhtw', 'mcpp')
group by 1 order by 1;

select data_source, count(*) from data_warehouse.pharmacy_claims
where data_source in ('mdcd', 'mhtw', 'mcpp')
group by 1 order by 1;
*/

/***********************************************
 * Using the newly determined uth_rx_claim_id - data_source pairs,
 * go back and fix dim_uth_rx_claim_id -- NOTE THE RX
 **********************************************/
drop table if exists dw_staging.dim_rx_claim_id_data_source_fix;

create table dw_staging.dim_rx_claim_id_data_source_fix as
select data_source, uth_rx_claim_id
from data_warehouse.pharmacy_claims
where data_source in ('mhtw', 'mcpp')
group by 1, 2;

update data_warehouse.dim_uth_rx_claim_id a
set data_source = b.data_source
from dw_staging.dim_rx_claim_id_data_source_fix b
where a.uth_rx_claim_id = b.uth_rx_claim_id
and a.data_source = 'mdcd';

vacuum analyze data_warehouse.dim_uth_rx_claim_id;

/**** check if it worked ***************************** 
select data_source, count(distinct uth_rx_claim_id), count(distinct rx_claim_id_src) from data_warehouse.pharmacy_claims
where data_source in ('mdcd', 'mhtw', 'mcpp') and "year" = 2022
group by 1 order by 1;

mcpp	121206	121206
mdcd	23919004	23919004
mhtw	92652	92652

select data_source, count(*) from data_warehouse.dim_uth_rx_claim_id
where data_source in ('mdcd', 'mhtw', 'mcpp') and "year" = 2022
group by 1 order by 1;

mcpp	121206
mdcd	23919004
mhtw	92652

*/

/****************************************************************************************************/
/*hotfix: add in the last few missing uth_member_ids for member_ids that are not in enrollment table*/
/****************************************************************************************************/

/*
--first generate a shortlist of medicaid members who have claim_created_flag = true
create table dw_staging.mcd_dim_memid_clm_created_temp
as select * from data_warehouse.dim_uth_member_id
where data_source = 'mdcd' and claim_created_id = true
distributed by(uth_member_id);

vacuum analyze dw_staging.mcd_dim_memid_clm_created_temp;

--select * from dw_staging.mcd_dim_memid_clm_created_temp;

--claim_detail
update data_warehouse.claim_detail a
set uth_member_id = b.uth_member_id
from dw_staging.mcd_dim_memid_clm_created_temp b
where a.data_source = 'mdcd' and
	a.uth_member_id is null and
	a.member_id_src = b.member_id_src;

vacuum analyze data_warehouse.claim_detail_1_prt_mdcd;

--claim_diag
update data_warehouse.claim_diag a
set uth_member_id = b.uth_member_id
from dw_staging.mcd_dim_memid_clm_created_temp b
where a.data_source = 'mdcd' and
	a.uth_member_id is null and
	a.member_id_src = b.member_id_src;

vacuum analyze data_warehouse.claim_diag_1_prt_mdcd;

--claim_icd_proc
update data_warehouse.claim_icd_proc a
set uth_member_id = b.uth_member_id
from dw_staging.mcd_dim_memid_clm_created_temp b
where a.data_source = 'mdcd' and
	a.uth_member_id is null and
	a.member_id_src = b.member_id_src;

vacuum analyze data_warehouse.claim_icd_proc_1_prt_mdcd;

--claim_header
update data_warehouse.claim_header a
set uth_member_id = b.uth_member_id
from dw_staging.mcd_dim_memid_clm_created_temp b
where a.data_source = 'mdcd' and
	a.uth_member_id is null and
	a.member_id_src = b.member_id_src;

vacuum analyze data_warehouse.claim_header_1_prt_mdcd;
*/

/****************************************************************************************************
 * pharmacy_claims - there are no claim_created members here
 * but there are a whole bunch of missing uth_member_ids
 * so update from the dim table
*****************************************************************************************************/

drop table if exists dw_staging.mcd_dim_uth_member_id_temp;

create table dw_staging.mcd_dim_uth_member_id_temp as
select * from data_warehouse.dim_uth_member_id
where data_source = 'mdcd'
distributed by (member_id_src);

vacuum analyze dw_staging.mcd_dim_uth_member_id_temp;

update data_warehouse.pharmacy_claims_1_prt_mdcd a
set uth_member_id = b.uth_member_id
from dw_staging.mcd_dim_uth_member_id_temp b
where a.year = 2022
	a.uth_member_id is null and
	a.member_id_src = b.member_id_src;

vacuum analyze data_warehouse.pharmacy_claims; --about 3 minutes

/* QA - we still got nulls?
select year, count(*) from data_warehouse.pharmacy_claims_1_prt_mdcd
where uth_member_id is null group by 1 order by 1;

--if pass QA then drop temp table
drop table if exists dw_staging.mcd_dim_uth_member_id_temp;
*/

/*Hotfix: Fix missing uth_member_ids in the dim_uth_rx_claim_id table*/

drop table if exists dw_staging.mcd_pharm_clms_subset_temp;

create table dw_staging.mcd_pharm_clms_subset_temp as
select distinct data_source, uth_member_id, rx_claim_id_src 
from data_warehouse.pharmacy_claims
where data_source in ('mdcd', 'mhtw', 'mcpp')
and year between 2021 and 2022
distributed by (rx_claim_id_src);

vacuum analyze dw_staging.mcd_pharm_clms_subset_temp;

update data_warehouse.dim_uth_rx_claim_id a
set uth_member_id = b.uth_member_id,
	data_source = b.data_source
from dw_staging.mcd_pharm_clms_subset_temp b
where a.data_source in ('mdcd', 'mhtw', 'mcpp') and
	a.uth_member_id is null and
	a.rx_claim_id_src = b.rx_claim_id_src;

vacuum analyze data_warehouse.dim_uth_rx_claim_id;

/***QA
select * from dw_staging.mcd_pharm_clms_subset_temp;

select data_source, count(*) from data_warehouse.dim_uth_rx_claim_id
where year = 2022 and data_source in ('mdcd', 'mcpp', 'mhtw') and uth_member_id is null
group by 1;
***/

/*

 */




/***QA: Count how many null uth_member_ids are left in each table**
select count(*) from data_warehouse.claim_detail 
where data_source in ('mdcd', 'mhtw', 'mcpp') and uth_member_id is null;

select count(*) from data_warehouse.claim_diag 
where data_source in ('mdcd', 'mhtw', 'mcpp') and uth_member_id is null;

select count(*) from data_warehouse.claim_icd_proc
where data_source in ('mdcd', 'mhtw', 'mcpp') and uth_member_id is null;

select count(*) from data_warehouse.claim_header
where data_source in ('mdcd', 'mhtw', 'mcpp') and uth_member_id is null;
--18

select count(*) from data_warehouse.pharmacy_claims
where data_source in ('mdcd', 'mhtw', 'mcpp') and uth_member_id is null;
--41,122 (but there are a metric ton of rows, so good enough)
*/

/********************************
 * change update_log
 *******************************/

--backup update_log
drop table if exists backup.update_log;

create table backup.update_log as
select * from data_warehouse.update_log;

--update update_log (last update 9/20/23)
update data_warehouse.update_log
set data_last_updated = current_date,
	details = 'Medicaid data updated for FY22'
where schema_name = 'data_warehouse' and
	(table_name like 'claim%' or 
	table_name = 'pharmacy_claims') and
	(table_name not like '%1%'
	or (table_name like '%mdcd' or
	table_name like '%mcpp' or 
	table_name like '%mhtw'))
	;

alter table data_warehouse.update_log owner to uthealth_analyst;
alter table backup.update_log owner to uthealth_analyst;